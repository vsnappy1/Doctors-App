name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events for the main branch.  
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# The jobs to run as part of this workflow
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Environment variables
    env:
      # Set the JAVA_HOME environment variable
      JAVA_HOME_17_X64: /usr/lib/jvm/adoptopenjdk-17-hotspot-amd64

    # Steps represent a sequence of tasks to be performed
    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # You can use 'adopt' or 'zulu' or 'temurin' based on preference
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10
        
      # Step 7.1: Cache Gradle dependencies
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.RELEASE_KEY_STORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }} 

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks


      - name: Build Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace
